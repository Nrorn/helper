Kafka- это брокер сообщенией. Прилетает моного сообщение и их нужо рапределеить межуд разными.

Свойства Kafka
-распределенность 
-оказаустойчивость
-высокая доступность
-надежность и согласованность данных
-высокая производительность (пропусканая способность)
-горизонтальное масштабирвоание
-интегрируемость

ИНтегриуемост с многими системами

Решаемые задачи

Events  |     |  Producers |    |   Broker   |  Consumers
--------      --------------    ---------------------
1 1 1 1 |  -> |       1    | -> |   1 1 1    | <- 1 2
1 1 1 1 |     |            |    |            | /
--------      -------------      ---------------------
2 2 2 2 |  -> |     2      | -> |   2 2 2    | \
        |     |            |    |            | <- 2 1 3 
2 2 2 2 |     |            |    |            | /
--------      --------------    -------------------
3 3 3 3 |  -> |     3      | -> |  3 3 3     | \
        |     |            |    |	           |<- 2 3 
3 3 3 3 |     |            |    |            | 

Events - набор разнородных событий
Producers - поставщики данных 
Broker (Kafka) -(посредник) получает данные от Producers ,хранит информацию, и по запросу отдает ее Consumers
Consumers - потребители данных (собирает информацию из нужных ящиков)


какие удобства при спользование broker
-надежность и гарнтия доставки
-подключение новых получателей
-отправители не знаю получателей
-тех поддержка
-интеграция разных стеков

=-=-=-=-=-=-=-=-=--=-=--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
из чего состоит kafka
-Broker 
-Zookeeper
-Message (Record) 
-topic/partition - ящик куда складывабтся наши даныне 
-producer
-consumer
=-=-=-=-=-=-=-=
Broker - kafka server, kafka node, kaka broker - это всее синонимы

Функции брокера
-прием сообщений
-хранение сообщений
-выдача сообщений

используется в виде cluster, используется дял масштабируемосит и оказа устойчевости

выделяют отдельный Broker - controller
он отвечате за консистентность данных 

=-=-=-=-=-=-=-=
Zookeeper
в качестве координатора используется Zookeeper

Функции Zookeeper
-состояние кластера (хранит в себе конфиг кластера, какие есть брокеры, храниться контроллек)
-конфигурация
-адресная книга (date)

=-=-=-=-=-=-=-=
-Message (Record | Event ) key-value pair
представляю из себя Key-Value пару, которые занимаются распределением сообщений внутри кластера 

Поле сообщения | Описание
----------------------------
Key 	       | Ключ (опциональный) используется для распредления сообщений по клстеру
Value	       | содержимое сообщения - массив байт (бизнес данные )
Timestamp      | Время сообщения (от эпохи). Устанавливается при отправке или обработке внутри кластера
Headers        | Набор key-value пар с пользовательскими атрибутами сообщения



=-=-=-=-=-=-=-==-=-=-=-=-=-=-=       
Topic/partition -stream of data
основная сущность кафки - можно представить в виде таблицы получения однотипных событий которые логически могли обеденить

в Topic выстраивается некая очередить из событий(собщений) из этой же очерид извлекаются сообщения
даныне поступают          topic                 считываются Consumers
--------------------->  0 1 2 3 4 5 ---------> 0 1 2 3 4 5

предача выполняется по правилу FIFO - ferst in - ferst out (первый пришел - первый ушел)
после прочтения данных Consumers из topic они не удаляются

при больших нагрузках идет распаралеливание Partitions

Ускорение чтения/записи данных(параллелизация)

   даныне поступают          topic             считываются Consumers
0--------------------->  0 1 2 3 4 5 ---------> n:0 1:0 1:1 0:0               
1--------------------->  0 1 2 3 4 5 ---------> n:0 1:0 1:1 0:0               
.
.
.
n--------------------->  0 1 2 3 4 5 ---------> n:0 1:0 1:1 0:0               

распределение topic по кластеру иделаьный вариант что каждый топик на каджом жлементе  кластера 
broker| 	broker|		broker|
------------------------ ----------------              
Topic A		topic A		topic A
0000000          1111111          2222222

распределение не сбалансированной партиции топика
broker| 	broker|		broker|
------------------------ ----------------              
Topic A		topic A		
0000000          1111111          
	         2222222                              

распределение не сбалансированной партиции топика
учитывается количество всех партиций всех топиков на брокер()
broker| 	broker|		broker|
------------------------ ----------------              
		topic A		
                 1111111          
	         2222222   
	         0000000
	         
topic B				topic D 
topic C				topic C

где хранятся данные topic - хранятся в обычных log файлах
  brocker	brocker file system
T		./logs
o 0000		    ./A-0	
p 1111		     ./A-1	
i 2222		     ./A-2	
c
A 
               
=-=-=-=-=-=-=-=-=--=-=--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=               
Apache Kafka и Nginx - это два совершенно разных инструмента с разными целями и возможностями:

Apache Kafka

• Брокер сообщений: Apache Kafka - это распределенный брокер сообщений, который хранит потоки данных в реальном времени.
• Масштабируемый и отказоустойчивый: Kafka может масштабироваться до больших кластеров и обеспечивает отказоустойчивость благодаря репликации.
• Обработка больших данных: Kafka предназначен для обработки больших объемов данных, которые могут быть структурированными или неструктурированными.
• Потоковая обработка: Kafka поддерживает потоковую обработку данных, позволяя выполнять операции в реальном времени по мере поступления данных.
• Широкое использование: Kafka широко используется для потоковой обработки, сбора данных, микросервисов и других приложений, требующих надежной передачи сообщений.

Nginx

• Веб-сервер: Nginx - это веб-сервер с открытым исходным кодом, который используется для обслуживания веб-страниц и обработки HTTP-запросов.
• Прокси-сервер: Nginx также может использоваться в качестве прокси-сервера, маршрутизируя запросы между различными серверами.
• Ускоритель кеширования: Nginx имеет встроенный кеш, который может повысить производительность путем хранения часто запрашиваемых ресурсов в памяти.
• Балансировка нагрузки: Nginx может использоваться для балансировки нагрузки веб-трафика между несколькими серверами.
• Широкое распространение: Nginx является одним из самых популярных веб-серверов в мире, обслуживая миллиарды запросов в день.

Применимость

Apache Kafka лучше подходит для приложений, требующих обработки больших объемов потоковых данных в реальном времени. Nginx, с другой стороны, предназначен для обслуживания веб-трафика и управления HTTP-запросами



















