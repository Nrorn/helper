анализ дампа на ошибки 
https://www.wireshark.org/docs/dfref/


популярные фильтры 
https://networkguru.ru/wireshark-filtr-po-ip-portu-protokolu-mac/

вывод всего дампа в консоль
tshark -r dump_3.pcap -V -2 


1)Половинчатый трафик

Ну трафик в обе стороны видишь или только от клиента в сторону сервера? 
Ну или наоьорот
От сервера к клиенту

/home/esermyagin/dump/dump_2(Половинчатый трафик).pcap



ищит фти по названию файла
ftp.request.arg == "100MB.zip"

ищит все что прилетело по 21 порту 
tcp.port == 21 
tcp.port == 55684


да просто посмотреть глазами для начала, где передача файла будет запрашиваться, в каком потоке
Талалушкин Алексей @alexey.talalushkin
12:35


tshark -r dump_2.pcap tcp.port == 21 | grep RETR
там контролинг ftp, команды разные, нас интересует RETR
1001529 134.295653 178.217.44.123 → 90.130.74.113 FTP 74 Request: RETR 100MB.zip

g10@vitok-ipdr01.573.gprs.komi.mts:~/serm/out$ tshark -r dump_2.pcap tcp.port == 21 | grep RETR
  691 180.349705 10.168.147.96 → 195.191.36.170 GTP <FTP> 110 Request: RETR video.zip
16472 229.454684 10.168.147.96 → 195.191.36.170 GTP <FTP> 111 Request: RETR Portal.zip



Чтобы перейти к определенному номеру строки в Wireshark, выполните следующие действия:

1. Откройте файл захвата пакетов в Wireshark.
2. Нажмите на любой пакет в списке пакетов, чтобы выделить его.
3. Нажмите на клавишу "Ctrl+G" или выберите пункт меню "Go to packet" в меню "Edit".
4. Введите номер строки, на которую вы хотите перейти, и нажмите "Enter".
5. Wireshark перейдет к указанной строке в списке пакетов.

=-=-=-=-=-=-=-=-=--=-=--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
=-=-=-=-=-=-=-=-=--=-=--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=


если в ftp-data видим [TCP Previous segment not captured] FTP Data (Предыдущий сегмент TCP не захвачен] Данные FTP)
почему что не удалось поймать пердыдущий сегмент


=-=-=-=-=-=-=-=-=--=-=--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
https://habr.com/ru/articles/735866/
=-=-=-=-=-=-=-=-=--=-=--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

 Чтобы применить фильтр для отображения только пакетов TCP, связанных с загрузкой файла, введите следующий фильтр в поле фильтра: "tcp contains video.zip".

 Теперь вы увидите только пакеты TCP, связанные с загрузкой файла. Вы можете просмотреть каждый пакет, чтобы увидеть, какие данные были переданы и есть ли какие-либо ошиби или проблемы в передаче данных.

Например, отберём все пакеты, приходящие от IP-адреса 10.1.30.46 с помощью ввода в фильтре «ip.src == x.x.x.x».
ip.src == 10.1.30.46

Также можно отфильтровать трафик сети по IP-адресу получателя пакетов с помощью команды «ip.dst == x.x.x.x».
ip.dst == 10.1.30.46

Кроме того, можно увидеть пакеты вне зависимости от направления трафика с помощью «ip.addr == x.x.x.x».
ip.addr == 10.1.30.46

Для фильтрации по номеру порта используется «.port = x» после названия протокола. Например, для просмотра TCP-порта 80, используемого для незашифрованного трафика HTTP, используем команду «tpc.port == 80».


И, наконец, для фильтрации трафика по используемым пакетами протоколам необходимо просто ввести название протокола.
Обратите внимание, что фильтры можно комбинировать при помощи логических операторов И «and/&&», ИЛИ «or/||» и НЕ «not/!»





















